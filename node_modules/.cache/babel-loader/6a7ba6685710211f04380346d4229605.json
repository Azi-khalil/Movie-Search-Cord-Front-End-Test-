{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Downloads/frontend-test/src/pages/discover/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport * as colors from \"../../colors\";\nimport * as fetcher from \"../../fetcher\";\nimport SearchFilters from \"../../components/searchfilter\";\nimport MovieList from \"../../components/movielist\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Discover extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleKeyword = e => {\n      this.setState({\n        keyword: e.target.value\n      });\n    };\n\n    this.handleYear = e => {\n      this.setState({\n        year: e.target.value\n      });\n    };\n\n    this.state = {\n      keyword: '',\n      year: 0,\n      results: [],\n      totalCount: 0,\n      genreOptions: [],\n      ratingOptions: [{\n        id: 7.5,\n        name: 7.5\n      }, {\n        id: 8,\n        name: 8\n      }, {\n        id: 8.5,\n        name: 8.5\n      }, {\n        id: 9,\n        name: 9\n      }, {\n        id: 9.5,\n        name: 9.5\n      }, {\n        id: 10,\n        name: 10\n      }],\n      languageOptions: [{\n        id: 'GR',\n        name: 'Greek'\n      }, {\n        id: 'EN',\n        name: 'English'\n      }, {\n        id: 'RU',\n        name: 'Russian'\n      }, {\n        id: 'PO',\n        name: 'Polish'\n      }]\n    };\n  } // api =  885b085ddf759af703d71ca6be89d58b\n\n\n  componentDidMount() {\n    fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=885b085ddf759af703d71ca6be89d58b&language=en-US&page=1\").then(response => response.json()).then(response => {\n      this.setState({\n        results: response.results,\n        totalCount: response.total_results,\n        languageOptions: response.results.original_language,\n        genreOptions: response.results.genre_ids\n      });\n      console.log(\"main\", response);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.keyword !== this.state.keyword || prevState.year !== this.state.year) {\n      axios.get(`https://api.themoviedb.org/3/search/movie?api_key=885b085ddf759af703d71ca6be89d58b&query=${this.state.keyword}&year=${this.state.year}`).then(response => {\n        this.setState({\n          results: response.data.results\n        });\n      });\n    } else {\n      console.log(\"nooo\");\n    }\n  } // Write a function to preload the popular movies when page loads & get the movie genres\n  // Write a function to trigger the API request and load the search results based on the keyword and year given as parameters\n\n\n  render() {\n    const {\n      genreOptions,\n      languageOptions,\n      ratingOptions,\n      totalCount,\n      results\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(DiscoverWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MobilePageTitle, {\n        children: \"Discover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieResults, {\n        children: [totalCount > 0 && /*#__PURE__*/_jsxDEV(TotalCounter, {\n          children: [totalCount, \" results\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n          movies: results || []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieFilters, {\n        children: /*#__PURE__*/_jsxDEV(SearchFilters, {\n          genres: genreOptions,\n          ratings: ratingOptions,\n          languages: languageOptions,\n          handleKeyword: this.handleKeyword,\n          handleYear: this.handleYear\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst DiscoverWrapper = styled.main`\n  padding: 60px 35px;\n  right: 0;\n  display: flex;\n  flex-direction: row;\n`;\n_c = DiscoverWrapper;\nconst TotalCounter = styled.div`\n  font-weight: 600;\n  left: 0;\n`;\n_c2 = TotalCounter;\nconst MovieResults = styled.div`\n  width: 100%;\n  margin-right: 20px;\n`;\n_c3 = MovieResults;\nconst MovieFilters = styled.div`\n`;\n_c4 = MovieFilters;\nconst MobilePageTitle = styled.header`\n  display: none;\n`;\n_c5 = MobilePageTitle;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DiscoverWrapper\");\n$RefreshReg$(_c2, \"TotalCounter\");\n$RefreshReg$(_c3, \"MovieResults\");\n$RefreshReg$(_c4, \"MovieFilters\");\n$RefreshReg$(_c5, \"MobilePageTitle\");","map":{"version":3,"sources":["/Users/Admin/Downloads/frontend-test/src/pages/discover/index.js"],"names":["React","styled","axios","colors","fetcher","SearchFilters","MovieList","Discover","Component","constructor","props","handleKeyword","e","setState","keyword","target","value","handleYear","year","state","results","totalCount","genreOptions","ratingOptions","id","name","languageOptions","componentDidMount","fetch","then","response","json","total_results","original_language","genre_ids","console","log","componentDidUpdate","prevProps","prevState","get","data","render","DiscoverWrapper","main","TotalCounter","div","MovieResults","MovieFilters","MobilePageTitle","header"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport axios from 'axios'\r\n\r\n\r\nimport * as colors from \"../../colors\";\r\nimport * as fetcher from \"../../fetcher\";\r\n\r\nimport SearchFilters from \"../../components/searchfilter\";\r\nimport MovieList from \"../../components/movielist\";\r\n\r\nexport default class Discover extends React.Component {\r\n \r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      keyword: '',\r\n      year: 0,\r\n      results: [],\r\n      totalCount: 0,\r\n      genreOptions: [],\r\n      ratingOptions: [\r\n        { id: 7.5, name: 7.5 },\r\n        { id: 8, name: 8 },\r\n        { id: 8.5, name: 8.5 },\r\n        { id: 9, name: 9 },\r\n        { id: 9.5, name: 9.5 },\r\n        { id: 10, name: 10 }\r\n      ],\r\n      languageOptions: [\r\n        { id: 'GR', name: 'Greek' },\r\n        { id: 'EN', name: 'English' },\r\n        { id: 'RU', name: 'Russian' },\r\n        { id: 'PO', name: 'Polish' }\r\n      ]\r\n    };\r\n  }\r\n  // api =  885b085ddf759af703d71ca6be89d58b\r\n  componentDidMount() {\r\n      fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=885b085ddf759af703d71ca6be89d58b&language=en-US&page=1\")\r\n      .then((response) => response.json())\r\n      .then(response => {\r\n          this.setState({\r\n            results: response.results,\r\n            totalCount:response.total_results,\r\n            languageOptions: response.results.original_language,\r\n            genreOptions: response.results.genre_ids\r\n          })\r\n          console.log(\"main\", response)\r\n      });\r\n    }\r\n\r\n  handleKeyword = (e) => {\r\n    this.setState({\r\n      keyword: e.target.value\r\n    })\r\n  }\r\n  handleYear = (e) => {\r\n    this.setState({\r\n      year: e.target.value\r\n    })\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.keyword !== this.state.keyword || prevState.year !== this.state.year ) {\r\n      axios\r\n      .get(`https://api.themoviedb.org/3/search/movie?api_key=885b085ddf759af703d71ca6be89d58b&query=${this.state.keyword}&year=${this.state.year}`)\r\n      .then(response => {\r\n        this.setState({\r\n          results: response.data.results,\r\n        })\r\n      })\r\n    }else{\r\n      console.log(\"nooo\")\r\n    }\r\n  }\r\n  // Write a function to preload the popular movies when page loads & get the movie genres\r\n\r\n  // Write a function to trigger the API request and load the search results based on the keyword and year given as parameters\r\n\r\n\r\n\r\n  render () {\r\n    const { genreOptions, languageOptions, ratingOptions, totalCount, results } = this.state;\r\n\r\n\r\n    return (\r\n      <DiscoverWrapper>\r\n        <MobilePageTitle>Discover</MobilePageTitle> \r\n        {/* MobilePageTitle should become visible on small screens & mobile devices*/}\r\n        <MovieResults>\r\n          { totalCount > 0 && <TotalCounter>{totalCount} results</TotalCounter>}\r\n          <MovieList \r\n            movies={results || []}\r\n          />\r\n        </MovieResults>\r\n        <MovieFilters>\r\n          <SearchFilters \r\n            genres={genreOptions} \r\n            ratings={ratingOptions}  \r\n            languages={languageOptions}\r\n            handleKeyword={this.handleKeyword}\r\n            handleYear={this.handleYear}\r\n          />\r\n        </MovieFilters>     \r\n      </DiscoverWrapper>\r\n    )\r\n  }\r\n}\r\n\r\nconst DiscoverWrapper = styled.main`\r\n  padding: 60px 35px;\r\n  right: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst TotalCounter = styled.div`\r\n  font-weight: 600;\r\n  left: 0;\r\n`\r\n\r\nconst MovieResults = styled.div`\r\n  width: 100%;\r\n  margin-right: 20px;\r\n`\r\n\r\nconst MovieFilters = styled.div`\r\n`\r\n\r\nconst MobilePageTitle = styled.header`\r\n  display: none;\r\n`"]},"metadata":{},"sourceType":"module"}