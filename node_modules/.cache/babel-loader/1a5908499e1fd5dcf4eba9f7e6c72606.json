{"ast":null,"code":"var _jsxFileName = \"/Users/Admin/Downloads/frontend-test/src/components/checkbox/index.js\";\nimport React from \"react\";\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CheckBox extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      checked: true\n    };\n\n    this.handleChange = () => {\n      console.log(\"check\", this.state.checked);\n      this.setState({\n        checked: !this.state.checked\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n      onChange: this.handleChange,\n      children: [/*#__PURE__*/_jsxDEV(HiddenCheckbox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCheckbox, {\n        checked: this.state.checked,\n        children: /*#__PURE__*/_jsxDEV(Icon, {\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"polyline\", {\n            points: \"20 6 9 17 4 12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nconst CheckboxContainer = styled.div`\n  \n`;\n_c = CheckboxContainer;\nconst Icon = styled.svg`\n  fill: none;\n  stroke: white;\n  stroke-width: 2px;\n`; // Hide checkbox visually but remain accessible to screen readers.\n// Source: https://polished.js.org/docs/#hidevisually\n\n_c2 = Icon;\nconst HiddenCheckbox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  border: 0;\n  clip: rect(0 0 0 0);\n  clippath: inset(50%);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`;\n_c3 = HiddenCheckbox;\nconst StyledCheckbox = styled.div`\n  display: inline-block;\n  width: 16px;\n  height: 16px;\n  background: ${_ref => {\n  let {\n    checked\n  } = _ref;\n  return checked ? 'salmon' : 'papayawhip';\n}};\n  border-radius: 3px;\n  transition: all 150ms;\n\n  ${HiddenCheckbox}:focus + & {\n    box-shadow: 0 0 0 3px pink;\n  }\n\n  ${Icon} {\n    visibility: ${_ref2 => {\n  let {\n    checked\n  } = _ref2;\n  return checked ? 'visible' : 'hidden';\n}}\n  }\n`;\n_c4 = StyledCheckbox;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CheckboxContainer\");\n$RefreshReg$(_c2, \"Icon\");\n$RefreshReg$(_c3, \"HiddenCheckbox\");\n$RefreshReg$(_c4, \"StyledCheckbox\");","map":{"version":3,"sources":["/Users/Admin/Downloads/frontend-test/src/components/checkbox/index.js"],"names":["React","styled","CheckBox","Component","state","checked","handleChange","console","log","setState","render","CheckboxContainer","div","Icon","svg","HiddenCheckbox","input","attrs","type","StyledCheckbox"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEpDC,KAFoD,GAE5C;AACNC,MAAAA,OAAO,EAAE;AADH,KAF4C;;AAAA,SAMpDC,YANoD,GAMrC,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKJ,KAAL,CAAWC,OAAhC;AACA,WAAKI,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADT,OAAd;AAGD,KAXmD;AAAA;;AAapDK,EAAAA,MAAM,GAAI;AACR,wBACE,QAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAE,KAAKJ,YAAlC;AAAA,8BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWC,OAApC;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAC,WAAd;AAAA,iCACE;AAAU,YAAA,MAAM,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAxBmD;AA2BtD,MAAMM,iBAAiB,GAAGV,MAAM,CAACW,GAAI;AACrC;AACA,CAFA;KAAMD,iB;AAIN,MAAME,IAAI,GAAGZ,MAAM,CAACa,GAAI;AACxB;AACA;AACA;AACA,CAJA,C,CAKA;AACA;;MANMD,I;AAON,MAAME,cAAc,GAAGd,MAAM,CAACe,KAAP,CAAaC,KAAb,CAAmB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAnB,CAAyC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMH,c;AAaN,MAAMI,cAAc,GAAGlB,MAAM,CAACW,GAAI;AAClC;AACA;AACA;AACA,gBAAgB;AAAA,MAAC;AAAEP,IAAAA;AAAF,GAAD;AAAA,SAAiBA,OAAO,GAAG,QAAH,GAAc,YAAtC;AAAA,CAAmD;AACnE;AACA;AACA;AACA,IAAIU,cAAe;AACnB;AACA;AACA;AACA,IAAIF,IAAK;AACT,kBAAkB;AAAA,MAAC;AAAER,IAAAA;AAAF,GAAD;AAAA,SAAkBA,OAAO,GAAG,SAAH,GAAe,QAAxC;AAAA,CAAiD;AACnE;AACA,CAfA;MAAMc,c","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nexport default class CheckBox extends React.Component {\r\n  // Create a custom checkbox component\r\n  state = {\r\n    checked: true\r\n  }\r\n\r\n  handleChange = () => {\r\n    console.log(\"check\", this.state.checked)\r\n    this.setState({\r\n      checked: !this.state.checked\r\n    })\r\n  }\r\n  \r\n  render () {\r\n    return (\r\n      <CheckboxContainer onChange={this.handleChange} >\r\n        <HiddenCheckbox />\r\n        <StyledCheckbox checked={this.state.checked} >\r\n          <Icon viewBox=\"0 0 24 24\">\r\n            <polyline points=\"20 6 9 17 4 12\" />\r\n          </Icon>\r\n        </StyledCheckbox>\r\n    </CheckboxContainer>\r\n    )\r\n  }\r\n}\r\n\r\nconst CheckboxContainer = styled.div`\r\n  \r\n`\r\n\r\nconst Icon = styled.svg`\r\n  fill: none;\r\n  stroke: white;\r\n  stroke-width: 2px;\r\n`\r\n// Hide checkbox visually but remain accessible to screen readers.\r\n// Source: https://polished.js.org/docs/#hidevisually\r\nconst HiddenCheckbox = styled.input.attrs({ type: 'checkbox' })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: inline-block;\r\n  width: 16px;\r\n  height: 16px;\r\n  background: ${({ checked }) => checked ? 'salmon' : 'papayawhip'};\r\n  border-radius: 3px;\r\n  transition: all 150ms;\r\n\r\n  ${HiddenCheckbox}:focus + & {\r\n    box-shadow: 0 0 0 3px pink;\r\n  }\r\n\r\n  ${Icon} {\r\n    visibility: ${({ checked })  => checked ? 'visible' : 'hidden'}\r\n  }\r\n`"]},"metadata":{},"sourceType":"module"}